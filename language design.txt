只关注语言的：
设计思路：我需要什么api
使用思路：我想要的效果用语言表达出来就是哪几步

组件化：
1：组件是独立的，写一次，可以任意组合到其他地方使用
2：组件数据的入口和出口，组件间的通信是如何传输数据，取出数据使用的，或者如果加上关系，如父子，A如何通过AB的关系调用B的数据或者方法

模板解析：
按照一定规则解析组件=》导致你写组件代码必须按照某种固定的模式！使用固定的符号！不然无法识别！


简化代码=>函数式编程：


能解决复杂问题，容易把想法和图转化成代码实现=》
分而治之：
把逻辑层层划分，代码由简到繁


动态规划：
关系链移动

框架：
通用的入口和出口
配置，注解，继承等标记方式的识别
相应的代码生成器
diff算法，拓扑算法或某些核心算法的使用
单例，监听等模式的使用

